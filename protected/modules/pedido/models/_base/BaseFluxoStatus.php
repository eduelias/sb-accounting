<?php

/**
 * This is the model base class for the table "fluxo_status".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FluxoStatus".
 *
 * Columns in table "fluxo_status" available as properties of the model,
 * followed by relations of table "fluxo_status" available as properties of the model.
 *
 * @property string $idfluxo_status
 * @property string $idfluxo
 * @property integer $idstatus
 * @property integer $idusuario
 * @property string $data_status
 *
 * @property CadStatus $idstatus0
 * @property Fluxo $idfluxo0
 * @property User $idusuario0
 */
abstract class BaseFluxoStatus extends SActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'fluxo_status';
	}

	public static function representingColumn() {
		return 'data_status';
	}

	public function rules() {
		return array(
			array('idfluxo, idstatus, idusuario', 'required'),
			array('idstatus, idusuario', 'numerical', 'integerOnly'=>true),
			array('idfluxo', 'length', 'max'=>20),
			array('data_status', 'safe'),
			array('data_status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idfluxo_status, idfluxo, idstatus, idusuario, data_status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idstatus0' => array(self::BELONGS_TO, 'CadStatus', 'idstatus'),
			'idfluxo0' => array(self::BELONGS_TO, 'Fluxo', 'idfluxo'),
			'idusuario0' => array(self::BELONGS_TO, 'User', 'idusuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idfluxo_status' => Yii::t('app', 'Idfluxo Status'),
			'idfluxo' => Yii::t('app', 'Idfluxo'),
			'idstatus' => Yii::t('app', 'Idstatus'),
			'idusuario' => Yii::t('app', 'Idusuario'),
			'data_status' => Yii::t('app', 'Data Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idfluxo_status', $this->idfluxo_status, true);
		$criteria->compare('idfluxo', $this->idfluxo);
		$criteria->compare('idstatus', $this->idstatus);
		$criteria->compare('idusuario', $this->idusuario);
		$criteria->compare('data_status', $this->data_status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}