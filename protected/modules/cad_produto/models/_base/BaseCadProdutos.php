<?php

/**
 * This is the model base class for the table "cad_produtos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CadProdutos".
 *
 * Columns in table "cad_produtos" available as properties of the model,
 * followed by relations of table "cad_produtos" available as properties of the model.
 *
 * @property integer $idprodutos
 * @property integer $idunidade
 * @property integer $idcategoria
 * @property integer $idusuario
 * @property integer $idtipo
 * @property integer $idvalidade
 * @property string $nomeprod
 * @property string $desc_max
 * @property string $desc_min
 * @property string $qtde_min
 * @property string $data_atualizacao
 * @property string $data_cadastro
 * @property integer $ativo
 *
 * @property CadProdutosUnidade $idunidade0
 * @property CadProdutosCategoria $idcategoria0
 * @property User $idusuario0
 * @property CadProdutosTipo $idtipo0
 * @property CadProdutosValidade $idvalidade0
 * @property CadProdutosCaracter[] $cadProdutosCaracters
 * @property CadProdutosDescricao[] $cadProdutosDescricaos
 * @property CadProdutosFiscal[] $cadProdutosFiscals
 * @property CadProdutosGrupos[] $cadProdutosGruposes
 * @property CadProdutosGrupos $cadProdutosGrupos
 * @property CadProdutosIcms[] $cadProdutosIcms
 * @property CadProdutosImg[] $cadProdutosImgs
 * @property CadProdutosPrecos[] $cadProdutosPrecoses
 * @property CadProdutosPrecosVolume[] $cadProdutosPrecosVolumes
 * @property CadRelProdutosPrecoClifor[] $cadRelProdutosPrecoClifors
 * @property FluxoProdutos[] $fluxoProdutoses
 */
abstract class BaseCadProdutos extends SActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'cad_produtos';
	}

	public static function representingColumn() {
		return 'nomeprod';
	}

	public function rules() {
		return array(
			array('idunidade, idcategoria, idtipo, idvalidade, nomeprod', 'required'),
			array('idunidade, idcategoria, idusuario, idtipo, idvalidade, ativo', 'numerical', 'integerOnly'=>true),
			array('nomeprod', 'length', 'max'=>200),
			array('desc_max, desc_min', 'length', 'max'=>4),
			array('qtde_min', 'length', 'max'=>7),
			array('data_atualizacao, data_cadastro', 'safe'),
			array('nomeprod, desc_max, desc_min, qtde_min, data_atualizacao, data_cadastro, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idprodutos, idunidade, idcategoria, idusuario, idtipo, idvalidade, nomeprod, desc_max, desc_min, qtde_min, data_atualizacao, data_cadastro, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'unidade' => array(self::BELONGS_TO, 'CadProdutosUnidade', 'idunidade'),
			'categoria' => array(self::BELONGS_TO, 'CadProdutosCategoria', 'idcategoria'),
			'usuario' => array(self::BELONGS_TO, 'User', 'idusuario'),
			'tipo' => array(self::BELONGS_TO, 'CadProdutosTipo', 'idtipo'),
			'validade' => array(self::BELONGS_TO, 'CadProdutosValidade', 'idvalidade'),
			'caracteristicas' => array(self::HAS_MANY, 'CadProdutosCaracter', 'idprodutos'),
			'descricoes' => array(self::HAS_MANY, 'CadProdutosDescricao', 'idprodutos'),
			//'ficais' => array(self::HAS_MANY, 'CadProdutosFiscal', 'idprodutos'),
			//'grupos' => array(self::HAS_MANY, 'CadProdutosGrupos', 'idprodutos'),
			//'grupo' => array(self::HAS_ONE, 'CadProdutosGrupos', 'idgrupo'),
			//'icms' => array(self::HAS_MANY, 'CadProdutosIcms', 'idprodutos'),
			//'imgs' => array(self::HAS_MANY, 'CadProdutosImg', 'idprodutos'),
			'precos' => array(self::HAS_MANY, 'CadProdutosPrecos', 'idprodutos'),
			'preco' => array(self::HAS_ONE, 'CadProdutosPrecos','idprodutos','order'=>'idprodutos_precos DESC'),
			//'preco_volume' => array(self::HAS_MANY, 'CadProdutosPrecosVolume', 'idprodutos'),
			//'preco_clifor' => array(self::HAS_MANY, 'CadRelProdutosPrecoClifor', 'idprodutos'),
			//'fluxos' => array(self::HAS_MANY, 'FluxoProdutos', 'idprodutos'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idprodutos' => Yii::t('app', 'Idprodutos'),
			'idunidade' => Yii::t('app', 'Idunidade'),
			'idcategoria' => Yii::t('app', 'Idcategoria'),
			'idusuario' => Yii::t('app', 'Idusuario'),
			'idtipo' => Yii::t('app', 'Idtipo'),
			'idvalidade' => Yii::t('app', 'Idvalidade'),
			'nomeprod' => Yii::t('app', 'Nomeprod'),
			'desc_max' => Yii::t('app', 'Desc Max'),
			'desc_min' => Yii::t('app', 'Desc Min'),
			'qtde_min' => Yii::t('app', 'Qtde Min'),
			'data_atualizacao' => Yii::t('app', 'Data Atualizacao'),
			'data_cadastro' => Yii::t('app', 'Data Cadastro'),
			'ativo' => Yii::t('app', 'Ativo'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idprodutos', $this->idprodutos);
		$criteria->compare('idunidade', $this->idunidade);
		$criteria->compare('idcategoria', $this->idcategoria);
		$criteria->compare('idusuario', $this->idusuario);
		$criteria->compare('idtipo', $this->idtipo);
		$criteria->compare('idvalidade', $this->idvalidade);
		$criteria->compare('nomeprod', $this->nomeprod, true);
		$criteria->compare('desc_max', $this->desc_max, true);
		$criteria->compare('desc_min', $this->desc_min, true);
		$criteria->compare('qtde_min', $this->qtde_min, true);
		$criteria->compare('data_atualizacao', $this->data_atualizacao, true);
		$criteria->compare('data_cadastro', $this->data_cadastro, true);
		$criteria->compare('ativo', $this->ativo);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}