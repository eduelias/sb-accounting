<?php

/**
 * This is the model base class for the table "cad_produtos_validade".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CadProdutosValidade".
 *
 * Columns in table "cad_produtos_validade" available as properties of the model,
 * followed by relations of table "cad_produtos_validade" available as properties of the model.
 *
 * @property integer $idprodutos_validade
 * @property integer $idunidade
 * @property string $tipo
 * @property string $valor
 * @property string $periodo
 *
 * @property CadProdutos[] $cadProdutoses
 * @property CadProdutosUnidade $idunidade0
 */
abstract class BaseCadProdutosValidade extends SActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'cad_produtos_validade';
	}

	public static function representingColumn() {
		return 'tipo';
	}

	public function rules() {
		return array(
			array('idunidade', 'required'),
			array('idunidade', 'numerical', 'integerOnly'=>true),
			array('tipo', 'length', 'max'=>100),
			array('valor, periodo', 'length', 'max'=>6),
			array('tipo, valor, periodo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idprodutos_validade, idunidade, tipo, valor, periodo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'produtos' => array(self::HAS_MANY, 'CadProdutos', 'idvalidade'),
			'unidade' => array(self::BELONGS_TO, 'CadProdutosUnidade', 'idunidade'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idprodutos_validade' => Yii::t('app', 'Idprodutos Validade'),
			'idunidade' => Yii::t('app', 'Idunidade'),
			'tipo' => Yii::t('app', 'Tipo'),
			'valor' => Yii::t('app', 'Valor'),
			'periodo' => Yii::t('app', 'Periodo'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idprodutos_validade', $this->idprodutos_validade);
		$criteria->compare('idunidade', $this->idunidade);
		$criteria->compare('tipo', $this->tipo, true);
		$criteria->compare('valor', $this->valor, true);
		$criteria->compare('periodo', $this->periodo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}