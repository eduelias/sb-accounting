<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $iduser
 * @property string $nome
 * @property string $login
 * @property string $password
 * @property string $seed
 * @property string $email
 *
 * @property Comentario[] $comentarios
 * @property Nconf[] $nconfs
 * @property Nconf[] $nconfs1
 * @property NconfPrevisao[] $nconfPrevisaos
 * @property Setor[] $setors
 * @property Setor[] $setors1
 */
abstract class BaseUser extends SActiveRecord {

	public $password2;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, login', 'required'),
			array('nome, password, seed, email', 'length', 'max'=>255),
			array('login', 'length', 'max'=>45),
			array('password2', 'compare', 'compareAttribute'=>'password'),
			array('password, seed, email', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iduser, nome, login, password, seed, email', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'comentarios' => array(self::HAS_MANY, 'Comentario', 'iduser'),
			'nconfs' => array(self::MANY_MANY, 'Nconf', 'nconf_user_leu(iduser, idnconf)'),
			'nconfs1' => array(self::HAS_MANY, 'Nconf', 'iduser_direcionado'),
			'nconfPrevisaos' => array(self::HAS_MANY, 'NconfPrevisao', 'iduser_inseriu'),
			'setors' => array(self::MANY_MANY, 'Setor', 'rel_User_setor(iduser, idsetor)'),
			'setors1' => array(self::HAS_MANY, 'Setor', 'iduser_responsavel'),
		);
	}

	public function pivotModels() {
		return array(
			'nclidas' => 'NconfUserLeu',
			'setor' => 'RelUserSetor',
		);
	}

	public function attributeLabels() {
		return array(
			'iduser' => Yii::t('app', 'Iduser'),
			'nome' => Yii::t('app', 'Nome'),
			'login' => Yii::t('app', 'Login'),
			'password' => Yii::t('app', 'Password'),
			'seed' => Yii::t('app', 'Seed'),
			'email' => Yii::t('app', 'Email'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iduser', $this->iduser);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('login', $this->login, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('seed', $this->seed, true);
		$criteria->compare('email', $this->email, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}