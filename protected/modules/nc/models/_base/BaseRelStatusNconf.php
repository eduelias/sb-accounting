<?php

/**
 * This is the model base class for the table "rel_status_nconf".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RelStatusNconf".
 *
 * Columns in table "rel_status_nconf" available as properties of the model,
 * followed by relations of table "rel_status_nconf" available as properties of the model.
 *
 * @property integer $idrelacao
 * @property integer $idstatus
 * @property integer $idnconf
 * @property integer $iduser
 * @property string $data
 *
 * @property Nconf $idnconf0
 * @property Status $idstatus0
 * @property User $iduser0
 */
abstract class BaseRelStatusNconf extends SActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'rel_status_nconf';
	}

	public static function representingColumn() {
		return 'data';
	}

	public function rules() {
		return array(
			array('idstatus, idnconf, iduser, data', 'required'),
			array('idstatus, idnconf, iduser', 'numerical', 'integerOnly'=>true),
			array('idrelacao, idstatus, idnconf, iduser, data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idnconf0' => array(self::BELONGS_TO, 'Nconf', 'idnconf'),
			'idstatus0' => array(self::BELONGS_TO, 'Status', 'idstatus'),
			'iduser0' => array(self::BELONGS_TO, 'User', 'iduser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idrelacao' => Yii::t('app', 'Idrelacao'),
			'idstatus' => Yii::t('app', 'Idstatus'),
			'idnconf' => Yii::t('app', 'Idnconf'),
			'iduser' => Yii::t('app', 'Iduser'),
			'data' => Yii::t('app', 'Data'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idrelacao', $this->idrelacao);
		$criteria->compare('idstatus', $this->idstatus);
		$criteria->compare('idnconf', $this->idnconf);
		$criteria->compare('iduser', $this->iduser);
		$criteria->compare('data', $this->data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}